#ifndef __TRANSLATION_H__
#define __TRANSLATION_H__

class Translation{

public:

  /*--------------------------------------------------------------------------*/

  Translation(const double& tx, const double& ty, const double& tz) :
    tx(tx), ty(ty), tz(tz) {
  }

  /*--------------------------------------------------------------------------*/

  Translation() : tx(0), ty(0), tz(0) {
  }

  /*--------------------------------------------------------------------------*/

  arma::mat get_matrix() const {

    return arma::mat{

      { 1, 0, 0, tx },
      { 0, 1, 0, ty },
      { 0, 0, 1, tz },
      { 0, 0, 0, 1  }

    };

  }

  /*--------------------------------------------------------------------------*/

  arma::mat get_derivative_tx() const {

    return arma::mat{

      { 0, 0, 0, 1 },
      { 0, 0, 0, 0 },
      { 0, 0, 0, 0 },
      { 0, 0, 0, 0 }

    };

  }

  /*--------------------------------------------------------------------------*/

  arma::mat get_derivative_ty() const {

    return arma::mat{

      { 0, 0, 0, 0 },
      { 0, 0, 0, 1 },
      { 0, 0, 0, 0 },
      { 0, 0, 0, 0 }

    };

  }

  /*--------------------------------------------------------------------------*/

  arma::mat get_derivative_tz() const {

    return arma::mat{

      { 0, 0, 0, 0 },
      { 0, 0, 0, 0 },
      { 0, 0, 0, 1 },
      { 0, 0, 0, 0 }

    };

  }

  /*--------------------------------------------------------------------------*/

private:

  /*--------------------------------------------------------------------------*/

  double tx;
  double ty;
  double tz;

  /*--------------------------------------------------------------------------*/

};

#endif
